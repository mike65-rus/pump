&НаКлиенте
Перем МассивСервера;
&НаКлиенте
Процедура ВыполнитьОбновление()
	пСтруктураСервера=ОбновитьНаСервере();
	МассивСервера=пСтруктураСервера.МассивПациентов;
	Объект.ДатаОбновленияСтационар=пСтруктураСервера.ДатаФайла1;
	Объект.ДатаОбновленияДневнойСтационар=пСтруктураСервера.ДатаФайла2;
КонецПроцедуры	
&НаКлиенте
Процедура Обновить(Команда)
	// Вставить содержимое обработчика.
	ВыполнитьОбновление();
	ОбновитьТЗ();
КонецПроцедуры
&НаСервереБезКонтекста
Функция ВернутьПутьКФайлу()
	Перем пПуть;
	Если ОбщегоНазначения.ЭтоWindowsСервер() Тогда
		пПуть="d:\educ";
	ИначеЕсли ОбщегоНазначения.ЭтоLinuxСервер() Тогда
		пПуть="/home/pharma/share/eir2";
	КонецЕсли;	
	Возврат пПуть;
КонецФункции	
&НаСервереБезКонтекста
Функция ПреобразоватьСтроковуюДатуВДату(пСтрЗнач)
	Перем пДата;
	Попытка
		пДата=Дата(Число(Лев(пСтрЗнач,4)),
			 Число(Сред(пСтрЗнач,6,2)),
			 Число(Прав(пСтрЗнач,2)));
	Исключение
		пДата=Неопределено;		 
	КонецПопытки;
	Возврат пДата;
КонецФункции	
&НаСервереБезКонтекста
Функция ПреобразоватьСтроковоеЗначение(пИмяУзла,пСтрЗнач)
	пРез=пСтрЗнач;
	пРеквизитыТипаДата="DNGOSP,DNAPR,DPGOSP,";
	Если СтрНайти(пРеквизитыТипаДата,пИмяУзла+",")>0 Тогда
		пРез=ПреобразоватьСтроковуюДатуВДату(пСтрЗнач);
	КонецЕсли;	
	Возврат пРез;
КонецФункции	
&НаСервереБезКонтекста
Функция ЗаполнитьСтруктуру(Эл,пСтрокаСтруктуры)
	СтрСтруктура=Новый Структура(пСтрокаСтруктуры);
	Для Каждого Элемент0 Из Эл.ДочерниеУзлы Цикл
		пИмяУзла=Элемент0.ИмяУзла;
		Если СтрНайти(пСтрокаСтруктуры+",",пИмяУзла+",")>0 Тогда
			СтрЗнач=Элемент0.ТекстовоеСодержимое;
			СтрСтруктура[пИмяУзла]=ПреобразоватьСтроковоеЗначение(пИмяУзла,СтрЗнач);
		КонецЕсли;	
	КонецЦикла;	
	Возврат СтрСтруктура;
КонецФункции	
&НаСервереБезКонтекста
Функция ПолучитьПоляДляСтруктуры(Эл)
	Перем пРез;
	пРез="";
	Для Каждого Элемент0 Из Эл.ДочерниеУзлы Цикл
		пИмяУзла=Элемент0.ИмяУзла;
		пРез=пРез+пИмяУзла+",";
	КонецЦикла;
	пРез=пРез+"НомСтр,ВидСтационара";
	Возврат пРез;
КонецФункции	
&НаСервереБезКонтекста
Процедура ПрочитатьФайлНаСервере(пФайл,пМассив)
	Перем пСч,Парсер,Построитель,Документ,пПоляДляСтруктуры,пНоваяСтруктура;
	Парсер = Новый ЧтениеXML;
    Парсер.ОткрытьФайл(пФайл);
 
    Построитель = Новый ПостроительDOM;
 	
    Документ = Построитель.Прочитать(Парсер);
	пСч=1;
 	Для Каждого Элемент0 Из Документ.ЭлементДокумента.ДочерниеУзлы Цикл
        Если Элемент0.ИмяУзла = "ZAP" Тогда
            Эл = Элемент0;	
			Если пСч=1 Тогда
				пПоляДляСтруктуры=ПолучитьПоляДляСтруктуры(Эл);
			КонецЕсли;
			пНоваяСтруктура=ЗаполнитьСтруктуру(Эл,пПоляДляСтруктуры);
			пНоваяСтруктура.НомСтр=пМассив.Количество();
			пНоваяСтруктура.ВидСтационара=?(СтрНайти(пФайл,"_D.")>0,2,1);
			пМассив.Добавить(пНоваяСтруктура);
			пСч=пСч+1;
		КонецЕсли;	
	КонецЦикла;
	Парсер.Закрыть();
КонецПроцедуры
&НаСервереБезКонтекста
Функция ОбновитьНаСервере()
	Перем пВозвращаемаяСтруктура;
	Перем пМассив;
	Перем пМассивФайлов,пФайл,ш;
	пВозвращаемаяСтруктура=Новый Структура("ДатаФайла1,ДатаФайла2,МассивПациентов");
	пВозвращаемаяСтруктура.ДатаФайла1=Неопределено;
	пВозвращаемаяСтруктура.ДатаФайла2=Неопределено;
	пВозвращаемаяСтруктура.МассивПациентов=Новый Массив;
	пМассивФайлов=Новый Массив;
	пМассивФайлов.Добавить("all_planed.xml");
	пМассивФайлов.Добавить("ALL_planed_D.XML");
	пМассив=Новый Массив;
	Для ш=0 По пМассивФайлов.Количество()-1 Цикл
		пФайл=ВернутьПутьКФайлу()+ПолучитьРазделительПутиСервера()+пМассивФайлов[ш];
		пВыбФайл=Новый Файл(пФайл);
		Если пВыбФайл.Существует()=Истина Тогда
			пВозвращаемаяСтруктура["ДатаФайла"+Строка(ш+1)]=пВыбФайл.ПолучитьВремяИзменения();			
			ПрочитатьФайлНаСервере(пФайл,пМассив);
		КонецЕсли;	
	КонецЦикла;	
	пВозвращаемаяСтруктура.МассивПациентов=пМассив;
	Возврат пВозвращаемаяСтруктура;
КонецФункции	

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	ВыполнитьОбновление();
	Объект.Подразделение=238;
	Объект.ВидСтационара=1;	// круглосут
	Объект.ВыбраннаяДата=ТекущаяДата();
	ВыбраннаяДатаПриИзменении(Элементы.ВыбраннаяДата);
КонецПроцедуры

&НаКлиенте
Процедура ВыбраннаяДатаПриИзменении(Элемент)
	// Вставить содержимое обработчика.
	ПриИзмененииДаты();
КонецПроцедуры
&НаКлиенте
Процедура ПриИзмененииДаты()
	ОбновитьТЗ();
КонецПроцедуры
&НаКлиенте
Функция ФамилияИмяОтчество(пФам,пИм,пОт)
	Перем пРез;
	пРез="";
	пРез=СОКРЛП(?(пФам=Неопределено,"",пФам));
	пРез=пРез+" "+СОКРЛП(?(пИм=Неопределено,"",пИм));
	пРез=пРез+" "+СОКРЛП(?(пОт=Неопределено,"",пОт));
	Возврат СОКРЛП(пРез);
КонецФункции	
&НаКлиенте
Процедура ОбновитьТЗ()
	// Сначала сделать сортировку в списке значений, чтобы избежать серверного вызова для ТЗ.Сортировать!!!
	пСпис=Новый СписокЗначений;
	пМассив=МассивСервера;
	пПодразделение=Объект.Подразделение;
	пВидСтационара=Объект.ВидСтационара;
	ш2=пМассив.Количество();
	Для ш=0 По ш2-1 Цикл
		Если Число(пМассив[ш].PMO)<>пПодразделение Тогда
			Продолжить;
		КонецЕсли;	
		Если пМассив[ш].ВидСтационара<>пВидСтационара Тогда
			Продолжить;
		КонецЕсли;	
		Если пМассив[ш].DPGOSP=Объект.ВыбраннаяДата   Тогда
			пСпис.Добавить(ш,ФамилияИмяОтчество(пМассив[ш].FAM,пМассив[ш].IM,пМассив[ш].OT));
		КонецЕсли;	
	КонецЦикла;				
	пСпис.СортироватьПоПредставлению(НаправлениеСортировки.Возр);	// Сортировка по ФИО
	
	
//	Элементы.ТЗ.ОтборСтрок=Неопределено;
//	Элементы.ТЗ.Обновить();
	пДоступность=Элементы.ТЗ.КоманднаяПанель.ПодчиненныеЭлементы.ТЗОтменитьПоиск.Доступность;
	// Заполнение ТЗ в порядке отсортированного по ФИО списка значений
	пТЗ=Объект.ТЗ;
	пТЗ.Очистить();
	Для Каждого Эл ИЗ пСпис Цикл
		СтрТаб=пТЗ.Добавить();
		ш=Число(Эл.Значение);
		СтрТаб.ФИО=Эл.Представление;
		СтрТаб.ИндексМассива=ш;
		СтрТаб.ДатаНачалаГоспитализации=пМассив[ш].DPGOSP;
		СтрТаб.ДатаНаправления=пМассив[ш].DNAPR;
		СтрТаб.Подразделение=пМассив[ш].PMO;
	КонецЦикла;	
	ЭтаФорма.ТекущийЭлемент=Элементы.ТЗ;
//	пТЗ.Сортировать("ФИО");	// Это приводит к вызову сервера во всех режисах клиента !!!
КонецПроцедуры	

&НаКлиенте
Процедура ПроизвестиВыбор()
	ТекДанные = Элементы.ТЗ.ТекущиеДанные;
	Если ТекДанные = Неопределено Тогда 
		Возврат; 
	КонецЕсли; 
	ш=ТекДанные.ИндексМассива;
	пМассив=МассивСервера;
	пФИО=ФамилияИмяОтчество(пМассив[ш].FAM,пМассив[ш].IM,пМассив[ш].OT);
	Сообщить(пФИО+" ПОЛИС: "+пМассив[ш].NPOLIS+" НАПРАВЛЕНИЕ: "+пМассив[ш].NNAPR);
КонецПроцедуры

&НаКлиенте
Процедура ТЗВыборЗначения(Элемент, Значение, СтандартнаяОбработка)
	ПроизвестиВыбор();
КонецПроцедуры


&НаКлиенте
Процедура ПодразделениеПриИзменении(Элемент)
	// Вставить содержимое обработчика.
	Если Объект.Подразделение<>238 Тогда
		Объект.ВидСтационара=2;	// дневной
	КонецЕсли;	
	ОбновитьТЗ();
КонецПроцедуры


&НаКлиенте
Процедура ВидСтационараПриИзменении(Элемент)
	// Вставить содержимое обработчика.
	ОбновитьТЗ();
КонецПроцедуры

&НаСервереБезКонтекста
Процедура ПолучитьФайлНСИНаСервере()
	пИмяФайла=ОбщегоНазначенияПУМПСервер.ПолучитьПапкуДанных()+ПолучитьРазделительПутиСервера()+"SpravNSI";
	// Записываем картинку на диск.
//    Результат.ПолучитьТелоКакДвоичныеДанные().Записать(пИмяФайла);	
	//
	Архив = Новый ЧтениеZipФайла(
		пИмяФайла+".zip",
        "" // пароль к архиву
    );	
 // Распакуем файлы по одиночке.    
    Для Каждого Элемент Из Архив.Элементы Цикл
        Архив.Извлечь(
            Элемент, // элемент для извлечения
            пИмяФайла,
            РежимВосстановленияПутейФайловZIP.НеВосстанавливать,
            "" // пароль
        );
	КонецЦикла; 
	Архив.Закрыть();

КонецПроцедуры

&НаСервереБезКонтекста
Процедура ЗагрузитьV006()
	Перем ID,NAME,DATE_BEG,DATE_END;
	пПапкаНСИ=ОбщегоНазначенияПУМПСервер.ПолучитьПапкуДанных()+ПолучитьРазделительПутиСервера()+"STORAGE";
	пФайл=пПапкаНСИ+ПолучитьРазделительПутиСервера()+"V006.xml";
	пСпрМенеджер=Справочники.V006;
	Парсер = Новый ЧтениеXML;
    Парсер.ОткрытьФайл(пФайл);
    Построитель = Новый ПостроительDOM;
    Документ = Построитель.Прочитать(Парсер);
 	Для Каждого Элемент0 Из Документ.ЭлементДокумента.ДочерниеУзлы Цикл
        Если Элемент0.ИмяУзла = "item" Тогда
        	пАтрибуты=Элемент0.Атрибуты;
        	ID=пАтрибуты.ПолучитьИменованныйЭлемент("ID");
        	NAME=пАтрибуты.ПолучитьИменованныйЭлемент("NAME");
        	DATE_BEG=пАтрибуты.ПолучитьИменованныйЭлемент("DATE_BEG");
        	DATE_END=пАтрибуты.ПолучитьИменованныйЭлемент("DATE_END");
        	Если (ID=Неопределено) ИЛИ (DATE_BEG=Неопределено) Тогда
        		Продолжить;
        	КонецЕсли;	
        	пКод=ID.Значение+"-"+ОбщегоНазначенияПГБ2.STOD(DATE_BEG.Значение,Истина);
        	пНайденныйЭлемент=пСпрМенеджер.НайтиПоКоду(пКод);
   	    	//@skip-warning
   	    	пНужноЗаписать=Истина;
   	    	//@skip-warning
   	    	пНовый=Истина;
   	    	пНовый=НЕ ЗначениеЗаполнено(пНайденныйЭлемент);
        	Если (НЕ пНовый) Тогда
        		// не новый
     			пНужноЗаписать=Ложь;
     			пНайденныйЭлемент=пНайденныйЭлемент.ПоучитьОбъект();   				        		
				Если НЕ (пНайденныйЭлемент.NAME=NAME.Значение) Тогда
					пНайденныйЭлемент.NAME=NAME.Значение;
					пНужноЗаписать=Истина;
				КонецЕсли;		   			
				Если (НЕ DATE_END=Неопределено) Тогда
					Если НЕ (пНайденныйЭлемент.DATE_END=DATE_END.Значение) Тогда
						пНайденныйЭлемент.DATE_END=DATE_END.Значение;
						пНужноЗаписать=Истина;
					КонецЕсли;
				КонецЕсли;		   			
				Если пНужноЗаписать Тогда
					пНайденныйЭлемент.Записать();        		       			
				КонецЕсли;	
        	Иначе
        		// новый
        		пНайденныйЭлемент=Справочники.V006.СоздатьЭлемент();
        		пНайденныйЭлемент.ID=Число(ID.Значение);
        		пНайденныйЭлемент.NAME=NAME.Значение;
        		пНайденныйЭлемент.Наименование=NAME.Значение;
        		пНайденныйЭлемент.DATE_BEG=ОбщегоНазначенияПГБ2.STOD(DATE_BEG.Значение,Истина);
        		Если НЕ (DATE_END=Неопределено) Тогда
        			пНайденныйЭлемент.DATE_END=ОбщегоНазначенияПГБ2.STOD(DATE_END.Значение,Истина);
        		КонецЕсли; 
				пНайденныйЭлемент.Записать();        		       			
        	КонецЕсли;	
     	КонецЕсли;	
	КонецЦикла;
	Парсер.Закрыть();
КонецПроцедуры

&НаСервереБезКонтекста
Процедура ВыполнитьЗагрузкуНСИ()
//	пПапкаНСИ=ОбщегоНазначенияПУМПСервер.ПолучитьПапкуДанных()+ПолучитьРазделительПутиСервера()+"STORAGE";
	ЗагрузитьV006();	
КонецПроцедуры

&НаКлиенте
Процедура ПолучитьНСИ(Команда)
	//ПолучитьФайлНСИНаСервере();
	ВыполнитьЗагрузкуНСИ();
КонецПроцедуры

