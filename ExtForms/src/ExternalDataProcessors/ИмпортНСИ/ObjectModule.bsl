Перем пПапкаНСИ;
Функция СведенияОВнешнейОбработке() Экспорт
       ДанныеДляРег = Новый Структура();
       ДанныеДляРег.Вставить("Наименование","Внешняя обработка загрузки НСИ");
       ДанныеДляРег.Вставить("Информация","Внешняя обработка Загрузка НСИ");
       ДанныеДляРег.Вставить("БезопасныйРежим", Ложь);
       ДанныеДляРег.Вставить("Версия", "ver.: 1.0.0.1");
       ДанныеДляРег.Вставить("Вид", "ДополнительнаяОбработка");
       ТабЗнКоманды = Новый ТаблицаЗначений;
       ТабЗнКоманды.Колонки.Добавить("Идентификатор");
       ТабЗнКоманды.Колонки.Добавить("Использование");
       ТабЗнКоманды.Колонки.Добавить("Представление");
       НовСтрока = ТабЗнКоманды.Добавить();
       НовСтрока.Идентификатор = "ВнешняяОбработкаЗагрузка_СКФОМС_НСИ";
       НовСтрока.Использование = "ВызовСерверногоМетода";
       НовСтрока.Представление = "Внешняя обработка Загрузка СКФОМС-НСИ";
       ДанныеДляРег.Вставить("Команды", ТабЗнКоманды);
       Возврат ДанныеДляРег;
КонецФункции
//Параметры: пЗн-Строка, пТип-Тип
Функция ЗначениеXmlВЗначение(пЗн,пТип)
	Перем пРез;
	пРез=Неопределено;
	Если Строка(пТип)="Дата" Тогда
		пРез=ОбщегоНазначенияПГБ2.STOD(пЗн,Истина);
	КонецЕсли;	
	Если Строка(пТип)="Число" Тогда
		Попытка
			пРез=Число(пЗн);
		Исключение
			пРез=0;
		КонецПопытки;		
	КонецЕсли;
	Если Строка(пТип)="Строка" Тогда
		пРез=СтрЗаменить(пЗн,"&quot;","""");		
	КонецЕсли;
	Возврат пРез;
КонецФункции
	
//Параметры: пЭлементСправочника,пИмяАтрибута,пЗначениеАтрибута,пТипРеквизита
//Возвращаемое значение: Булево
Функция РеквизитИАтрибутРавны(пЭлементСправочника,пИмяАтрибута,пЗначениеАтрибута,пТип)
	Перем ЗнРеквизита;
	ЗнРеквизита=пЭлементСправочника[пИмяАтрибута];
	Если пТип=Тип("Дата") Тогда
		Возврат ?(ЗнРеквизита=ОбщегоНазначенияПГБ2.STOD(пЗначениеАтрибута,Истина),Истина,Ложь);
	ИначеЕсли пТип=Тип("Число") Тогда
		Возврат ?(ЗнРеквизита=Число(пЗначениеАтрибута),Истина,Ложь);
	ИначеЕсли пТип=Тип("Строка") Тогда
		Возврат ?(ЗнРеквизита=СтрЗаменить(пЗначениеАтрибута,"&quot;",""""),Истина,Ложь);
	Иначе
		Возврат ?(ЗнРеквизита=пЗначениеАтрибута,Истина,Ложь);							
	КонецЕсли;
КонецФункции	
//
Процедура ЗагрузитьПростойСправочник(пИмяСправочника,ИмяПоляИД="ID",ИмяПоляДатаНач="DATE_BEG",ИмяПоляДатаКон="DATE_END")
	пФайл=пПапкаНСИ+ПолучитьРазделительПутиСервера()+пИмяСправочника+".xml";
	пСпрМенеджер=Справочники[пИмяСправочника];
	пДлинаИд=Метаданные.Справочники[пИмяСправочника].Реквизиты[ИмяПоляИД].Тип.КвалификаторыЧисла.Разрядность;
	пСтруктураСправочника=Новый Структура;
	Для Каждого Реквизит Из Метаданные.Справочники[пИмяСправочника].Реквизиты Цикл
		ИмяРеквизита=Реквизит.Имя;
		//Сообщить(ИмяРеквизита);
		пТип=Реквизит.Тип;
		пСтруктураСправочника.Вставить(ИмяРеквизита,пТип);
	КонецЦикла;	
	Парсер = Новый ЧтениеXML;
    Парсер.ОткрытьФайл(пФайл);
    Построитель = Новый ПостроительDOM;
    Документ = Построитель.Прочитать(Парсер);
 	Для Каждого Элемент0 Из Документ.ЭлементДокумента.ДочерниеУзлы Цикл
        Если Элемент0.ИмяУзла = "item" Тогда
			пСтруктура=Новый Структура;
			пСтруктураНовыхЗначенийСправочника=Новый Структура;
	        пАтрибуты=Элемент0.Атрибуты;
        	Для Каждого пАтрибут ИЗ пАтрибуты Цикл
				пИмяАтрибута=ВРЕГ(пАтрибут.Имя);
				пЗначениеАтрибута=пАтрибут.Значение;
				пСтруктура.Вставить(пИмяАтрибута,пЗначениеАтрибута);
        	КонецЦикла;
        	Для Каждого ЭлАтр ИЗ пСтруктура Цикл
        		пТип=Неопределено;
        		пНайдено=пСтруктураСправочника.Свойство(ЭлАтр.Ключ,пТип);
        		Если НЕ пНайдено Тогда
        			Продолжить;
        		Иначе
       				пСтруктураНовыхЗначенийСправочника.Вставить(
       					ЭлАтр.Ключ,
       					ЗначениеXmlВЗначение(ЭлАтр.Значение,пТип));
	    		КонецЕсли;	
        	КонецЦикла;
        	пЗнИД=Неопределено;
        	пНайдено1=пСтруктура.Свойство(ИмяПоляИД,пЗнИД);
        	Если Не пНайдено1 Тогда
        		Продолжить;
        	КонецЕсли;
        	пЗнДатаНач=Неопределено;
        	пНайдено1=пСтруктура.Свойство(ИмяПоляДатаНач,пЗнДатаНач);
        	Если Не пНайдено1 Тогда
        		Продолжить;
        	КонецЕсли;
			пКод=ОбщегоНазначенияПГБ2.StrZero(Число(пЗнИД),пДлинаИД)+"-"+
        		ОбщегоНазначенияПГБ2.DTOS(ОбщегоНазначенияПГБ2.STOD(пЗнДатаНач,Истина));
        	пНайденныйЭлемент=пСпрМенеджер.НайтиПоКоду(пКод);
   	    	пНужноЗаписать=Истина;
   	    	//@skip-warning
   	    	пНовый=НЕ ЗначениеЗаполнено(пНайденныйЭлемент);
			Если Не пНовый Тогда
				пНайденныйЭлемент=пНайденныйЭлемент.ПолучитьОбъект();
     			пНужноЗаписать=Ложь;
				Для Каждого пЗн ИЗ пСтруктураНовыхЗначенийСправочника Цикл
					Если НЕ (пЗн.Значение=пНайденныйЭлемент[пЗн.Ключ]) Тогда
						пНужноЗаписать=Истина;
					КонецЕсли;	
					пНайденныйЭлемент[пЗн.Ключ]=пЗн.Значение;
				КонецЦикла;	
			Иначе
				пНужноЗаписать=Истина;	
				пНайденныйЭлемент=Справочники[пИмяСправочника].СоздатьЭлемент();
				Для Каждого пЗн ИЗ пСтруктураНовыхЗначенийСправочника Цикл
					пНайденныйЭлемент[пЗн.Ключ]=пЗн.Значение;
					Если пЗн.Ключ="NAME" Тогда
						Попытка
							пНайденныйЭлемент.Наименование=пЗн.Значение;
						Исключение
						КонецПопытки;
					КонецЕсли;	
				КонецЦикла;	
			КонецЕсли;	        	
			Если пНужноЗаписать Тогда
				пНайденныйЭлемент.Записать();        		       			
			КонецЕсли;	
     	КонецЕсли;	
	КонецЦикла;
	Парсер.Закрыть();
КонецПроцедуры
//Параметры:СтекИмен-СписокЗначений
// Возврат: Строка-Полный путь в узлу xml с разделителем "/"
Функция ПостроитьПолныйПуть(СтекИмен)
    Путь = "";
    Для Каждого Имя Из СтекИмен Цикл
        Путь = Путь + "/" + Имя;
    КонецЦикла;
    Возврат Путь;
КонецФункции
//Параметры: пПуть - полный путь к узлу, СтекИмен - СписокЗначений
//Возвращаемое значение: Истина - путь к узлу уже в стеке, иначе - Ложь
Функция УзелВСтеке(пПуть,СтекИмен)
	Перем пРет;
	пРет=Ложь;
	Для Каждого Эл Из СтекИмен Цикл
		Если СтрНайти(Эл.Значение,пПуть)>0 Тогда
			пРет=Истина;
			Возврат пРет; 
		КонецЕсли;	
	КонецЦикла;		
	Возврат пРет; 
КонецФункции
//	
Процедура ЗагрузитьV001Справочник(пИмяСправочника)
	пВключаемыеКоды="A,B,S,";
	пНеВключаемыеКоды="A.,B.,";
	ИмяПоляИД="ID";	
	ИмяПоляДатаНач="DATEBEG";	
	ИмяПоляНаименование="NAME";
	ИмяСтартовогоАтрибута="NOMECLRLIST";
	пФайл=пПапкаНСИ+ПолучитьРазделительПутиСервера()+пИмяСправочника+".xml";
	пСпрМенеджер=Справочники[пИмяСправочника];
	пСтруктураСправочника=Новый Структура;
	Для Каждого Реквизит Из Метаданные.Справочники[пИмяСправочника].Реквизиты Цикл
		ИмяРеквизита=Реквизит.Имя;
		//Сообщить(ИмяРеквизита);
		пТип=Реквизит.Тип;
		пСтруктураСправочника.Вставить(ИмяРеквизита,пТип);
	КонецЦикла;	
	Парсер = Новый ЧтениеXML;
    Парсер.ОткрытьФайл(пФайл);
    СтекИмен = Новый СписокЗначений;
    // Чтение последовательным методом
	Пока Парсер.Прочитать() Цикл
		 Если Парсер.ТипУзла = ТипУзлаXML.НачалоЭлемента Тогда
		 	Если Не УзелВСтеке("/"+Парсер.Имя,СтекИмен) Тогда
		        СтекИмен.Добавить(Парсер.Имя);
		 	КонецЕсли;	
	        ПолныйПуть = ПостроитьПолныйПуть(СтекИмен);
            Если ПолныйПуть = "/"+ИмяСтартовогоАтрибута+"/item" Тогда
            	пКод="";
            	пНужноЗаписать=Ложь;
				пСтруктураАтрибутов=Новый Структура;
				пСтруктураНовыхЗначенийСправочника=Новый Структура;
				Пока Парсер.ПрочитатьАтрибут() Цикл
					пИмяАтрибута=ВРЕГ(Парсер.Имя);
					Если пИмяАтрибута="СОEMZDR" Тогда
						// Костыль - первые 2 символа в xml русские - ужас от ТФОМС!
						пИмяАтрибута="COEMZDR";
					КонецЕсли;	
					пЗначениеАтрибута=Парсер.Значение;
					Если пИмяАтрибута=ИмяПоляДатаНач Тогда
						Если ПустаяСтрока(пЗначениеАтрибута) Тогда
							пЗначениеАтрибута="2011-01-01";
						КонецЕсли;	
					КонецЕсли;	
					пСтруктураАтрибутов.Вставить(пИмяАтрибута,пЗначениеАтрибута);
				КонецЦикла;
	        	Для Каждого ЭлАтр ИЗ пСтруктураАтрибутов Цикл
	        		пТип=Неопределено;
	        		пНайдено=пСтруктураСправочника.Свойство(ЭлАтр.Ключ,пТип);
	        		Если НЕ пНайдено Тогда
	        			Продолжить;
	        		Иначе
	       				пСтруктураНовыхЗначенийСправочника.Вставить(
	       					ЭлАтр.Ключ,
	       					ЗначениеXmlВЗначение(ЭлАтр.Значение,пТип));
		    		КонецЕсли;	
	        	КонецЦикла;
	        	флПлохойЭлемент=Ложь;
	        	пЗнИД=Неопределено;
	        	пНайдено1=пСтруктураАтрибутов.Свойство(ИмяПоляИД,пЗнИД);
	        	Если Не пНайдено1 Тогда
		        	флПлохойЭлемент=Истина;
	        		Продолжить;
	        	ИначеЕсли СтрНайти(пВключаемыеКоды,Лев(пЗнИД,1)+",")=0 Тогда	
			        флПлохойЭлемент=Истина;
		        	Продолжить;
	        	ИначеЕсли СтрНайти(пНеВключаемыеКоды,Лев(пЗнИД,2)+",")=1 Тогда	
	    		    флПлохойЭлемент=Истина;
	        		Продолжить;
	        	КонецЕсли;
	        	пЗнДатаНач="";
	        	пНайдено1=пСтруктураАтрибутов.Свойство(ИмяПоляДатаНач,пЗнДатаНач);
	        	Если Не пНайдено1 Тогда
	            	флПлохойЭлемент=Истина;
	        		Продолжить;
	        	КонецЕсли;
				пКод=СОКРЛП(пЗнИД)+"-"+
    	    		ОбщегоНазначенияПГБ2.DTOS(ОбщегоНазначенияПГБ2.STOD(пЗнДатаНач,Истина));
        		пНайденныйЭлемент=пСпрМенеджер.НайтиПоКоду(пКод);
	   	    	пНужноЗаписать=Ложь;
	   	    	пНовый= пНайденныйЭлемент.Пустая();
				Если Не пНовый Тогда
					пНайденныйОбъект=пНайденныйЭлемент.ПолучитьОбъект();
					пНайденныйОбъект.Код=пКод;
		 			пНужноЗаписать=Ложь;
					Для Каждого пЗн ИЗ пСтруктураНовыхЗначенийСправочника Цикл
						Если НЕ (пЗн.Значение=пНайденныйОбъект[пЗн.Ключ]) Тогда
							пНужноЗаписать=Истина;
						КонецЕсли;	
						пНайденныйОбъект[пЗн.Ключ]=пЗн.Значение;
						Если пЗн.Ключ=ИмяПоляНаименование Тогда
							Попытка
								пНайденныйОбъект.Наименование=пЗн.Значение;
							Исключение
							КонецПопытки;
						КонецЕсли;	
					КонецЦикла;	
				Иначе
					пНужноЗаписать=Истина;	
					пНайденныйОбъект=Справочники[пИмяСправочника].СоздатьЭлемент();
					пНайденныйОбъект.Код=пКод;
					Для Каждого пЗн ИЗ пСтруктураНовыхЗначенийСправочника Цикл
						пНайденныйОбъект[пЗн.Ключ]=пЗн.Значение;
						Если пЗн.Ключ=ИмяПоляНаименование Тогда
							Попытка
								пНайденныйОбъект.Наименование=пЗн.Значение;
							Исключение
							КонецПопытки;
						КонецЕсли;	
					КонецЦикла;	
				КонецЕсли;
            ИначеЕсли ПолныйПуть= "/"+ИмяСтартовогоАтрибута+"/item/DOLGLIST" Тогда
            		Если НЕ	флПлохойЭлемент Тогда
						пНайденныйОбъект.Должности.Очистить();
					КонецЕсли;	
            ИначеЕсли ПолныйПуть= "/"+ИмяСтартовогоАтрибута+"/item/PROFLIST" Тогда
            		Если НЕ	флПлохойЭлемент Тогда
						пНайденныйОбъект.Профили.Очистить();
					КонецЕсли;	
            ИначеЕсли ПолныйПуть = "/"+ИмяСтартовогоАтрибута+"/item/DOLGLIST/item1" Тогда
            	Если флПлохойЭлемент Тогда
            		Продолжить;
				КонецЕсли;            	
            	DOLGNOST=Парсер.ЗначениеАтрибута("DOLGNOST");
            	Если DOLGNOST<>Неопределено Тогда
            		пНужноЗаписать=Истина;
            		DATE_BEG=ЗначениеXmlВЗначение(Парсер.ЗначениеАтрибута("DATE_BEG"),Тип("Дата"));
            		DATE_END=ЗначениеXmlВЗначение(Парсер.ЗначениеАтрибута("DATE_END"),Тип("Дата"));
            		НоваяСтрока=пНайденныйОбъект.Должности.Добавить();
            		НоваяСтрока.DOLGNOST=Число(DOLGNOST);
            		НоваяСтрока.DATE_BEG=DATE_BEG;
            		НоваяСтрока.DATE_END=DATE_END;
            	КонецЕсли;	
            ИначеЕсли ПолныйПуть = "/"+ИмяСтартовогоАтрибута+"/item/PROFLIST/item2" Тогда
            	Если флПлохойЭлемент Тогда
            		Продолжить;
				КонецЕсли;            	
	            PROFMEDHELP=Парсер.ЗначениеАтрибута("PROFMEDHELP");
            	Если PROFMEDHELP<>Неопределено Тогда
            		пНужноЗаписать=Истина;
            		DATE_BEG=ЗначениеXmlВЗначение(Парсер.ЗначениеАтрибута("DATE_BEG"),Тип("Дата"));
            		DATE_END=ЗначениеXmlВЗначение(Парсер.ЗначениеАтрибута("DATE_END"),Тип("Дата"));
            		НоваяСтрока=пНайденныйОбъект.Профили.Добавить();
            		НоваяСтрока.PROFMEDHELP=Число(PROFMEDHELP);
            		НоваяСтрока.DATE_BEG=DATE_BEG;
            		НоваяСтрока.DATE_END=DATE_END;
            	КонецЕсли;	
            КонецЕсли;
            
		 ИначеЕсли Парсер.ТипУзла = ТипУзлаXML.КонецЭлемента Тогда
			 Если ПолныйПуть = "/"+ИмяСтартовогоАтрибута+"/item" Тогда
			 	Если пНужноЗаписать И (НЕ флПлохойЭлемент) Тогда
			 		пНайденныйОбъект.Записать();
			 	КонецЕсли;
			 КонецЕсли;			 	
	         СтекИмен.Удалить(СтекИмен.Количество() - 1);
             ПолныйПуть = ПостроитьПолныйПуть(СтекИмен);
	     КонецЕсли;		  
	КонецЦикла;     	
	Парсер.Закрыть();
КонецПроцедуры	

Процедура ЗагрузитьF003Справочник(пИмяСправочника)
	пФайл=пПапкаНСИ+ПолучитьРазделительПутиСервера()+пИмяСправочника+".xml";
	пСпрМенеджер=Справочники[пИмяСправочника];
	Парсер = Новый ЧтениеXML;
    Парсер.ОткрытьФайл(пФайл);
    Построитель = Новый ПостроительDOM;
    Документ = Построитель.Прочитать(Парсер);
    шш=1;
 	Для Каждого Элемент0 Из Документ.ЭлементДокумента.ДочерниеУзлы Цикл
        Если Элемент0.ИмяУзла = "item" Тогда
        	Если шш>1 Тогда
//        		Продолжить;
        	КонецЕсли;
        	шш=шш+1;		
        	пАтрибуты=Элемент0.Атрибуты;
        	пНужноЗаписать=Ложь;
			Для Каждого пАтрибут ИЗ пАтрибуты Цикл
				пИмяАтрибута=ВРЕГ(пАтрибут.Имя);
				пЗначениеАтрибута=пАтрибут.Значение;
				Если ВРЕГ(пИмяАтрибута)="MCOD" Тогда
    		    	пНайденнаяСсылка=пСпрМенеджер.НайтиПоКоду(СОКРЛП(пЗначениеАтрибута));
		   	    	пНовый=НЕ ЗначениеЗаполнено(пНайденнаяСсылка);
		   	    	Если пНовый Тогда
						пЭлементСправочника=Справочники[пИмяСправочника].СоздатьЭлемент();
						пЭлементСправочника.Код=СОКРЛП(пЗначениеАтрибута);
						пНужноЗаписать=Истина;
		   	    	Иначе
						пЭлементСправочника=пНайденнаяСсылка.ПолучитьОбъект();		   	    					   	    		
		   	    	КонецЕсли;
				Иначе
					Попытка
						пРеквизит=Метаданные.Справочники[пИмяСправочника].Реквизиты[пИмяАтрибута];
					Исключение
						Продолжить;
					КонецПопытки;
					пТип=пРеквизит.Тип.Типы()[0];
					Если Не пНовый Тогда
						Если Не пНужноЗаписать Тогда
							пНужноЗаписать=Не РеквизитИАтрибутРавны(пЭлементСправочника,пИмяАтрибута,пЗначениеАтрибута,пТип);
						КонецЕсли;							
					КонецЕсли;	
					Если пТип=Тип("Дата") Тогда
						пЭлементСправочника[пИмяАтрибута]=
							ОбщегоНазначенияПГБ2.STOD(пЗначениеАтрибута,Истина);
					ИначеЕсли пТип=Тип("Число") Тогда
						пЭлементСправочника[пИмяАтрибута]=Число(пЗначениеАтрибута);
					ИначеЕсли пТип=Тип("Строка") Тогда
						пЭлементСправочника[пИмяАтрибута]=СтрЗаменить(пЗначениеАтрибута,"&quot;","""");
					Иначе
						пЭлементСправочника[пИмяАтрибута]=пЗначениеАтрибута;							
					КонецЕсли;
					Если пИмяАтрибута="NAM_MOK" Тогда
						пЭлементСправочника.Наименование=СтрЗаменить(пЗначениеАтрибута,"&quot;","""");
					КонецЕсли;						
				КонецЕсли;	
			КонецЦикла;
			// Подчиненные DOC и PODR
			Для Каждого Элемент1 Из Элемент0.ДочерниеУзлы Цикл
        		Если (Элемент1.ИмяУзла = "DOC") ИЛИ (Элемент1.ИмяУзла="PODR") Тогда
        			пИмяТабличнойЧасти="Документы";
        			пИмяОсновногоРеквизитаТабличнойЧасти="N_DOC";
        			ИмяРеквизитаXml="item1";
        			Если Элемент1.ИмяУзла="PODR" Тогда
    		   			пИмяТабличнойЧасти="Подразделения";
	        			пИмяОсновногоРеквизитаТабличнойЧасти="ID_PODR";
	    	   			ИмяРеквизитаXml="item2";
	        		КонецЕсли;	
					Для Каждого Элемент2 Из Элемент1.ДочерниеУзлы Цикл
						//ТабЗнач=пЭлементСправочника[пИмяТабличнойЧасти].Выгрузить();
						Если НРЕГ(Элемент2.ИмяУзла)<>ИмяРеквизитаXml Тогда
							Продолжить;
						КонецЕсли;	
			        	пАтрибуты=Элемент2.Атрибуты;
			        	Для Каждого пАтрибут ИЗ пАтрибуты Цикл
							пИмяАтрибута=ВРЕГ(пАтрибут.Имя);
							пЗначениеАтрибута=пАтрибут.Значение;
							Если пИмяАтрибута=пИмяОсновногоРеквизитаТабличнойЧасти Тогда
								пОтбор=Новый Структура;
								пОтбор.Вставить(пИмяОсновногоРеквизитаТабличнойЧасти,
									?(пИмяОсновногоРеквизитаТабличнойЧасти="ID_PODR",Число(пЗначениеАтрибута),пЗначениеАтрибута));
//								пМассивСтрок=ТабЗнач.НайтиСтроки(пОтбор);
								пМассивСтрок=пЭлементСправочника[пИмяТабличнойЧасти].НайтиСтроки(пОтбор);
								пНовыйДок=?(пМассивСтрок.Количество()=0,Истина,Ложь);
								Если пНовыйДок Тогда
									пНужноЗаписать=Истина;
									пСтрокаТабличнойЧасти=пЭлементСправочника[пИмяТабличнойЧасти].Добавить();
									пСтрокаТабличнойЧасти[пИмяОсновногоРеквизитаТабличнойЧасти]=пЗначениеАтрибута;
								Иначе
									пСтрокаТабличнойЧасти=пМассивСтрок[0]; 
								КонецЕсли;	
							Иначе
								пИзмененТЧ=0;
								Если Найти("D_START,DATE_E,NAME_PODR,ADDR_P,TYPE_BRANCH,",пИмяАтрибута+",")>0 Тогда
									Если Найти("D_START,DATE_E,",пИмяАтрибута+",")>0 Тогда
										Если Не пИзмененТЧ Тогда
											пИзмененТЧ=Не РеквизитИАтрибутРавны(пСтрокаТабличнойЧасти,пИмяАтрибута,пЗначениеАтрибута,Тип("Дата"));
											пСтрокаТабличнойЧасти[пИмяАтрибута]=ОбщегоНазначенияПГБ2.STOD(пЗначениеАтрибута,Истина);
										КонецЕсли;
									ИначеЕсли  Найти("TYPE_BRANCH,",пИмяАтрибута+",")>0 Тогда
										Если Не пИзмененТЧ Тогда
											пИзмененТЧ=Не РеквизитИАтрибутРавны(пСтрокаТабличнойЧасти,пИмяАтрибута,пЗначениеАтрибута,Тип("Число"));
										КонецЕсли;											
										пСтрокаТабличнойЧасти[пИмяАтрибута]=Число(пЗначениеАтрибута);
									Иначе
										Если Не пИзмененТЧ Тогда
											пИзмененТЧ=Не РеквизитИАтрибутРавны(пСтрокаТабличнойЧасти,пИмяАтрибута,СтрЗаменить(пЗначениеАтрибута,"&quot;",""""),Тип("Строка"));
											пСтрокаТабличнойЧасти[пИмяАтрибута]=СтрЗаменить(пЗначениеАтрибута,"&quot;","""");
										КонецЕсли;											
									КонецЕсли;	
								КонецЕсли;	
							КонецЕсли;
			        	КонецЦикла;	
					КонецЦикла;	        			
        		КонецЕсли;
			КонецЦикла;			
			Если (пНужноЗаписать ИЛИ пИзмененТЧ) Тогда
				пЭлементСправочника.Записать();
			КонецЕсли;		        	
        КонецЕсли;	
	КонецЦикла;		
	Парсер.Закрыть();
КонецПроцедуры
//
Процедура ЗагрузитьV003Справочник(пИмяСправочника)
	ИмяПоляИД="ID";	
	ИмяПоляДатаНач="DATE_BEG";	
	ИмяПоляНаименование="NAME";
	ИмяСтартовогоАтрибута="LICLIST";
	пФайл=пПапкаНСИ+ПолучитьРазделительПутиСервера()+пИмяСправочника+".xml";
	пСпрМенеджер=Справочники[пИмяСправочника];
	пСтруктураСправочника=Новый Структура;
	Для Каждого Реквизит Из Метаданные.Справочники[пИмяСправочника].Реквизиты Цикл
		ИмяРеквизита=Реквизит.Имя;
		//Сообщить(ИмяРеквизита);
		пТип=Реквизит.Тип;
		пСтруктураСправочника.Вставить(ИмяРеквизита,пТип);
	КонецЦикла;	
	Парсер = Новый ЧтениеXML;
    Парсер.ОткрытьФайл(пФайл);
    СтекИмен = Новый СписокЗначений;
    // Чтение последовательным методом
	Пока Парсер.Прочитать() Цикл
		 Если Парсер.ТипУзла = ТипУзлаXML.НачалоЭлемента Тогда
		 	Если Не УзелВСтеке("/"+Парсер.Имя,СтекИмен) Тогда
		        СтекИмен.Добавить(Парсер.Имя);
		 	КонецЕсли;	
	        ПолныйПуть = ПостроитьПолныйПуть(СтекИмен);
            Если ПолныйПуть = "/"+ИмяСтартовогоАтрибута+"/item" Тогда
            	//@skip-warning
            	пЭтоГруппа=0;
            	//@skip-warning
            	пКодРодителя=0;
            	пКод=0;
            	пНужноЗаписать=Ложь;
				пСтруктураАтрибутов=Новый Структура;
				пСтруктураНовыхЗначенийСправочника=Новый Структура;
				Пока Парсер.ПрочитатьАтрибут() Цикл
					пИмяАтрибута=ВРЕГ(Парсер.Имя);
					пЗначениеАтрибута=Парсер.Значение;
					Если пИмяАтрибута=ИмяПоляДатаНач Тогда
						Если пЗначениеАтрибута="" Тогда
							пЗначениеАтрибута="2011-01-01";
						КонецЕсли;	
					КонецЕсли;	
					Если пИмяАтрибута="IS_GROUP" Тогда
						пЭтоГруппа=ЗначениеXmlВЗначение(пЗначениеАтрибута,Тип("Число"));
					КонецЕсли;	
					Если пИмяАтрибута="IERARH" Тогда
						пКодРодителя=ЗначениеXmlВЗначение(пЗначениеАтрибута,Тип("Число"));
					КонецЕсли;	
					пСтруктураАтрибутов.Вставить(пИмяАтрибута,пЗначениеАтрибута);
				КонецЦикла;
	        	Для Каждого ЭлАтр ИЗ пСтруктураАтрибутов Цикл
	        		пТип=Неопределено;
	        		пНайдено=пСтруктураСправочника.Свойство(ЭлАтр.Ключ,пТип);
	        		Если НЕ пНайдено Тогда
	        			Продолжить;
	        		Иначе
	       				пСтруктураНовыхЗначенийСправочника.Вставить(
	       					ЭлАтр.Ключ,
	       					ЗначениеXmlВЗначение(ЭлАтр.Значение,пТип));
		    		КонецЕсли;	
	        	КонецЦикла;
	        	флПлохойЭлемент=Ложь;
	        	пЗнИД=Неопределено;
	        	пНайдено1=пСтруктураАтрибутов.Свойство(ИмяПоляИД,пЗнИД);
	        	Если Не пНайдено1 Тогда
		        	флПлохойЭлемент=Истина;
	        		Продолжить;
	        	КонецЕсли;
	        	пЗнДатаНач="";
	        	пНайдено1=пСтруктураАтрибутов.Свойство(ИмяПоляДатаНач,пЗнДатаНач);
	        	Если Не пНайдено1 Тогда
	            	флПлохойЭлемент=Истина;
	        		Продолжить;
	        	Иначе
	        	КонецЕсли;
//				пКод=СОКРЛП(пЗнИД)+"-"+
//    	    		ОбщегоНазначенияПГБ2.DTOS(ОбщегоНазначенияПГБ2.STOD(пЗнДатаНач,Истина));
				пКод=Число(пЗнИД);
        		пНайденныйЭлемент=пСпрМенеджер.НайтиПоКоду(пКод);
	   	    	пНужноЗаписать=Истина;
	   	    	пНовый=НЕ ЗначениеЗаполнено(пНайденныйЭлемент);
				Если Не пНовый Тогда
					пНайденныйОбъект=пНайденныйЭлемент.ПолучитьОбъект();
		 			пНужноЗаписать=Ложь;
					Для Каждого пЗн ИЗ пСтруктураНовыхЗначенийСправочника Цикл
						Если НЕ (пЗн.Значение=пНайденныйОбъект[пЗн.Ключ]) Тогда
							пНужноЗаписать=Истина;
						КонецЕсли;	
						пНайденныйОбъект[пЗн.Ключ]=пЗн.Значение;
					КонецЦикла;	
					Если пКодРодителя<>0 Тогда
						пРодительСсылка=пСпрМенеджер.НайтиПоКоду(пКодРодителя);
						пНайденныйОбъект.Родитель=пРодительСсылка;
					КонецЕсли;	
				Иначе
					пНужноЗаписать=Истина;	
					пНайденныйОбъект=Справочники[пИмяСправочника].СоздатьЭлемент();
					пНайденныйОбъект.Код=пКод;
					Для Каждого пЗн ИЗ пСтруктураНовыхЗначенийСправочника Цикл
						пНайденныйОбъект[пЗн.Ключ]=пЗн.Значение;
						Если пЗн.Ключ=ИмяПоляНаименование Тогда
							Попытка
								пНайденныйОбъект.Наименование=пЗн.Значение;
							Исключение
							КонецПопытки;
						КонецЕсли;	
					КонецЦикла;	
					Если пКодРодителя<>0 Тогда
						пРодительСсылка=пСпрМенеджер.НайтиПоКоду(пКодРодителя);
						пНайденныйОбъект.Родитель=пРодительСсылка;
					КонецЕсли;	
				КонецЕсли;	        	
            ИначеЕсли ПолныйПуть= "/"+ИмяСтартовогоАтрибута+"/item/SPECIALSMED_LIST" Тогда
            		Если НЕ	флПлохойЭлемент Тогда
						пНайденныйОбъект.Специальности.Очистить();
					КонецЕсли;	
            ИначеЕсли ПолныйПуть= "/"+ИмяСтартовогоАтрибута+"/item/PROFMEDHELP_LIST" Тогда
            		Если НЕ	флПлохойЭлемент Тогда
						пНайденныйОбъект.Профили.Очистить();
					КонецЕсли;	
            ИначеЕсли ПолныйПуть = "/"+ИмяСтартовогоАтрибута+"/item/SPECIALSMED_LIST/item" Тогда
            	Если флПлохойЭлемент Тогда
            		Продолжить;
				КонецЕсли;            	
            	SPECIALMED=Парсер.ЗначениеАтрибута("SPECIALMED");
            	Если SPECIALMED<>Неопределено Тогда
            		пНужноЗаписать=Истина;
            		НоваяСтрока=пНайденныйОбъект.Специальности.Добавить();
            		НоваяСтрока.SPECIALMED=Число(SPECIALMED);
            	КонецЕсли;	
            ИначеЕсли ПолныйПуть = "/"+ИмяСтартовогоАтрибута+"/item/PROFMEDHELP_LIST/item" Тогда
            	Если флПлохойЭлемент Тогда
            		Продолжить;
				КонецЕсли;            	
	            	PROFMEDHELP=Парсер.ЗначениеАтрибута("PROFMEDHELP");
            	Если PROFMEDHELP<>Неопределено Тогда
            		пНужноЗаписать=Истина;
            		НоваяСтрока=пНайденныйОбъект.Профили.Добавить();
            		НоваяСтрока.PROFMEDHELP=Число(PROFMEDHELP);
            	КонецЕсли;	
            КонецЕсли;
            
		 ИначеЕсли Парсер.ТипУзла = ТипУзлаXML.КонецЭлемента Тогда
			 Если ПолныйПуть = "/"+ИмяСтартовогоАтрибута+"/item" Тогда
			 	Если пНужноЗаписать И (НЕ флПлохойЭлемент) Тогда
			 		пНайденныйОбъект.Записать();
			 	КонецЕсли;
			 КонецЕсли;			 	
	         СтекИмен.Удалить(СтекИмен.Количество() - 1);
             ПолныйПуть = ПостроитьПолныйПуть(СтекИмен);
	     КонецЕсли;		  
	КонецЦикла;     	
	Парсер.Закрыть();
КонецПроцедуры	
//
Процедура ЗагрузитьSK007Справочник(пИмяСправочника)

	пНашКодЛПУ=СОКРЛП(Справочники.НастройкиПУМП.КодЛПУ.Значение);
	ИмяПоляИД="NUMBER";	
	ИмяПоляДатаНач="DATE_BEG";	
	ИмяПоляНаименование="NUMBER";
	ИмяСтартовогоАтрибута="LICLIST";
	пФайл=пПапкаНСИ+ПолучитьРазделительПутиСервера()+пИмяСправочника+".xml";
	пСпрМенеджер=Справочники[пИмяСправочника];
	пСтруктураСправочника=Новый Структура;
	Для Каждого Реквизит Из Метаданные.Справочники[пИмяСправочника].Реквизиты Цикл
		ИмяРеквизита=Реквизит.Имя;
		//Сообщить(ИмяРеквизита);
		пТип=Реквизит.Тип;
		пСтруктураСправочника.Вставить(ИмяРеквизита,пТип);
	КонецЦикла;	
	Парсер = Новый ЧтениеXML;
    Парсер.ОткрытьФайл(пФайл);
    СтекИмен = Новый СписокЗначений;
    // Чтение последовательным методом
	Пока Парсер.Прочитать() Цикл
		 Если Парсер.ТипУзла = ТипУзлаXML.НачалоЭлемента Тогда
		 	Если Не УзелВСтеке("/"+Парсер.Имя,СтекИмен) Тогда
		        СтекИмен.Добавить(Парсер.Имя);
		 	КонецЕсли;	
	        ПолныйПуть = ПостроитьПолныйПуть(СтекИмен);
            Если ПолныйПуть = "/"+ИмяСтартовогоАтрибута+"/item" Тогда
            	пКод="";
            	пКодЛПУ="";
            	пКодПодр="";
            	пНужноЗаписать=Ложь;
				пСтруктураАтрибутов=Новый Структура;
				пСтруктураНовыхЗначенийСправочника=Новый Структура;
				Пока Парсер.ПрочитатьАтрибут() Цикл
					пИмяАтрибута=ВРЕГ(Парсер.Имя);
					пЗначениеАтрибута=Парсер.Значение;
					Если пИмяАтрибута=ИмяПоляДатаНач Тогда
						Если пЗначениеАтрибута="" Тогда
							пЗначениеАтрибута="2000-01-01";
						КонецЕсли;	
					КонецЕсли;	
					Если пИмяАтрибута="LPU" Тогда
						пКодЛПУ=ЗначениеXmlВЗначение(пЗначениеАтрибута,Тип("Строка"));
					КонецЕсли;	
					Если пИмяАтрибута="LPU_PODR" Тогда
						пКодПодр=ЗначениеXmlВЗначение(пЗначениеАтрибута,Тип("Строка"));
					КонецЕсли;	
					пСтруктураАтрибутов.Вставить(пИмяАтрибута,пЗначениеАтрибута);
				КонецЦикла;
				Если НЕ (пКодЛПУ=пНашКодЛПУ) Тогда
					флПлохойЭлемент=Истина;
					Продолжить;
				КонецЕсли;	
	        	Для Каждого ЭлАтр ИЗ пСтруктураАтрибутов Цикл
	        		пТип=Неопределено;
	        		пНайдено=пСтруктураСправочника.Свойство(ЭлАтр.Ключ,пТип);
	        		Если НЕ пНайдено Тогда
	        			Продолжить;
	        		Иначе
	       				пСтруктураНовыхЗначенийСправочника.Вставить(
	       					ЭлАтр.Ключ,
	       					ЗначениеXmlВЗначение(ЭлАтр.Значение,пТип));
		    		КонецЕсли;	
	        	КонецЦикла;
	        	флПлохойЭлемент=Ложь;
	        	пЗнИД=Неопределено;
	        	пНайдено1=пСтруктураАтрибутов.Свойство(ИмяПоляИД,пЗнИД);
	        	Если Не пНайдено1 Тогда
		        	флПлохойЭлемент=Истина;
	        		Продолжить;
	        	КонецЕсли;
	        	пЗнДатаНач="";
	        	пНайдено1=пСтруктураАтрибутов.Свойство(ИмяПоляДатаНач,пЗнДатаНач);
	        	Если Не пНайдено1 Тогда
	            	флПлохойЭлемент=Истина;
	        		Продолжить;
	        	Иначе
	        	КонецЕсли;
				пКод=СОКРЛП(пЗнИД)+"-"+пКодЛПУ+"-"+пКодПодр+"-"+
    	    		ОбщегоНазначенияПГБ2.DTOS(ОбщегоНазначенияПГБ2.STOD(пЗнДатаНач,Истина));
        		пНайденныйЭлемент=пСпрМенеджер.НайтиПоКоду(пКод);
	   	    	пНужноЗаписать=Истина;
	   	    	пНовый=НЕ ЗначениеЗаполнено(пНайденныйЭлемент);
				Если Не пНовый Тогда
					пНайденныйОбъект=пНайденныйЭлемент.ПолучитьОбъект();
		 			пНужноЗаписать=Ложь;
					Для Каждого пЗн ИЗ пСтруктураНовыхЗначенийСправочника Цикл
						Если НЕ (пЗн.Значение=пНайденныйОбъект[пЗн.Ключ]) Тогда
							пНужноЗаписать=Истина;
						КонецЕсли;	
						пНайденныйОбъект[пЗн.Ключ]=пЗн.Значение;
					КонецЦикла;	
				Иначе
					пНужноЗаписать=Истина;	
					пНайденныйОбъект=Справочники[пИмяСправочника].СоздатьЭлемент();
					пНайденныйОбъект.Код=пКод;
					Для Каждого пЗн ИЗ пСтруктураНовыхЗначенийСправочника Цикл
						пНайденныйОбъект[пЗн.Ключ]=пЗн.Значение;
						Если пЗн.Ключ=ИмяПоляНаименование Тогда
							Попытка
								пНайденныйОбъект.Наименование=пЗн.Значение;
							Исключение
							КонецПопытки;
						КонецЕсли;	
					КонецЦикла;	
				КонецЕсли;	        	
            ИначеЕсли ПолныйПуть= "/"+ИмяСтартовогоАтрибута+"/item/USLUGI" Тогда
            		Если НЕ	флПлохойЭлемент Тогда
						пНайденныйОбъект.Услуги.Очистить();
					КонецЕсли;	
            ИначеЕсли СтрНайти(ПолныйПуть,"/"+ИмяСтартовогоАтрибута+"/item/USLUGI/item")=1 Тогда
            	Если флПлохойЭлемент Тогда
            		Продолжить;
				КонецЕсли;            	
	            CODE_USL=Парсер.ЗначениеАтрибута("CODE_USL");
            	Если CODE_USL<>Неопределено Тогда
            		пНужноЗаписать=Истина;
            		НоваяСтрока=пНайденныйОбъект.Услуги.Добавить();
            		НоваяСтрока.CODE_USL=ЗначениеXmlВЗначение(CODE_USL,Тип("Число"));
            	КонецЕсли;	
            КонецЕсли;
            
		 ИначеЕсли Парсер.ТипУзла = ТипУзлаXML.КонецЭлемента Тогда
			 Если ПолныйПуть = "/"+ИмяСтартовогоАтрибута+"/item" Тогда
			 	Если пНужноЗаписать И (НЕ флПлохойЭлемент) Тогда
			 		пНайденныйОбъект.Записать();
			 	КонецЕсли;
			 КонецЕсли;			 	
	         СтекИмен.Удалить(СтекИмен.Количество() - 1);
             ПолныйПуть = ПостроитьПолныйПуть(СтекИмен);
	     КонецЕсли;		  
	КонецЦикла;     	
	Парсер.Закрыть();
КонецПроцедуры	

Процедура ВыполнитьЗагрузкуНСИ(ИдентификаторКоманды)
	пПапкаНСИ=ОбщегоНазначенияПУМПСервер.ПолучитьПапкуДанных()+ПолучитьРазделительПутиСервера()+"STORAGE";
//	ЗагрузитьПростойСправочник("V006");
//	ЗагрузитьПростойСправочник("V008");
//	ЗагрузитьПростойСправочник("F003_T");
//	ЗагрузитьF003Справочник("F003");
//	ЗагрузитьПростойСправочник("V001_T");
//	ЗагрузитьПростойСправочник("V001_P");
//	ЗагрузитьПростойСправочник("V002");
//	ЗагрузитьПростойСправочник("V004");
//	ЗагрузитьПростойСправочник("V004_D");
//	ЗагрузитьV001Справочник("V001");
//	ЗагрузитьV003Справочник("V003");
//	ЗагрузитьSK007Справочник("SK007");
//	ЗагрузитьПростойСправочник("SK006");
//	ЗагрузитьПростойСправочник("V010");
//	ЗагрузитьПростойСправочник("V012");
	ЗагрузитьПростойСправочник("V009");

		
КонецПроцедуры

Процедура ВыполнитьКоманду(ИдентификаторКоманды) Экспорт
	ВыполнитьЗагрузкуНСИ(ИдентификаторКоманды);
КонецПроцедуры	