Перем пПапкаНСИ;
Функция СведенияОВнешнейОбработке() Экспорт
       ДанныеДляРег = Новый Структура();
       ДанныеДляРег.Вставить("Наименование","Внешняя обработка загрузки НСИ");
       ДанныеДляРег.Вставить("Информация","Внешняя обработка Загрузка НСИ");
       ДанныеДляРег.Вставить("БезопасныйРежим", Ложь);
       ДанныеДляРег.Вставить("Версия", "ver.: 1.0.0.1");
       ДанныеДляРег.Вставить("Вид", "ДополнительнаяОбработка");
       ТабЗнКоманды = Новый ТаблицаЗначений;
       ТабЗнКоманды.Колонки.Добавить("Идентификатор");
       ТабЗнКоманды.Колонки.Добавить("Использование");
       ТабЗнКоманды.Колонки.Добавить("Представление");
       НовСтрока = ТабЗнКоманды.Добавить();
       НовСтрока.Идентификатор = "ВнешняяОбработкаЗагрузка_СКФОМС_НСИ";
       НовСтрока.Использование = "ВызовСерверногоМетода";
       НовСтрока.Представление = "Внешняя обработка Загрузка СКФОМС-НСИ";
       ДанныеДляРег.Вставить("Команды", ТабЗнКоманды);
       Возврат ДанныеДляРег;
КонецФункции
//Параметры: пЗн-Строка, пТип-Тип
Функция ЗначениеXmlВЗначение(пЗн,пТип)
	Перем пРез;
	пРез=Неопределено;
	Если пТип=Тип("Дата") Тогда
		пРез=ОбщегоНазначенияПГБ2.STOD(пЗн,Истина);
	КонецЕсли;	
	Если пТип=Тип("Число") Тогда
		пРез=Число(пЗн);
	КонецЕсли;
	Если пТип=Тип("Строка") Тогда
		пРез=СтрЗаменить(пЗн,"&quot;","""");		
	КонецЕсли;
	Возврат пРез;
КонецФункции
	
//Параметры: пЭлементСправочника,пИмяАтрибута,пЗначениеАтрибута,пТипРеквизита
//Возвращаемое значение: Булево
Функция РеквизитИАтрибутРавны(пЭлементСправочника,пИмяАтрибута,пЗначениеАтрибута,пТип)
	Перем ЗнРеквизита;
	ЗнРеквизита=пЭлементСправочника[пИмяАтрибута];
	Если пТип=Тип("Дата") Тогда
		Возврат ?(ЗнРеквизита=ОбщегоНазначенияПГБ2.STOD(пЗначениеАтрибута,Истина),Истина,Ложь);
	ИначеЕсли пТип=Тип("Число") Тогда
		Возврат ?(ЗнРеквизита=Число(пЗначениеАтрибута),Истина,Ложь);
	ИначеЕсли пТип=Тип("Строка") Тогда
		Возврат ?(ЗнРеквизита=СтрЗаменить(пЗначениеАтрибута,"&quot;",""""),Истина,Ложь);
	Иначе
		Возврат ?(ЗнРеквизита=пЗначениеАтрибута,Истина,Ложь);							
	КонецЕсли;
КонецФункции	
//
Процедура ЗагрузитьПростойСправочник(пИмяСправочника,ИмяПоляИД="ID",ИмяПоляДатаНач="DATE_BEG",ИмяПоляДатаКон="DATE_END")
	пФайл=пПапкаНСИ+ПолучитьРазделительПутиСервера()+пИмяСправочника+".xml";
	пСпрМенеджер=Справочники[пИмяСправочника];
	пДлинаИд=Метаданные.Справочники[пИмяСправочника].Реквизиты[ИмяПоляИД].Тип.КвалификаторыЧисла.Разрядность;
	пСтруктураСправочника=Новый Структура;
	Для Каждого Реквизит Из Метаданные.Справочники[пИмяСправочника].Реквизиты Цикл
		ИмяРеквизита=Реквизит.Имя;
		//Сообщить(ИмяРеквизита);
		пТип=Реквизит.Тип;
		пСтруктураСправочника.Вставить(ИмяРеквизита,пТип);
	КонецЦикла;	
	Парсер = Новый ЧтениеXML;
    Парсер.ОткрытьФайл(пФайл);
    Построитель = Новый ПостроительDOM;
    Документ = Построитель.Прочитать(Парсер);
 	Для Каждого Элемент0 Из Документ.ЭлементДокумента.ДочерниеУзлы Цикл
        Если Элемент0.ИмяУзла = "item" Тогда
			пСтруктура=Новый Структура;
			пСтруктураНовыхЗначенийСправочника=Новый Структура;
	        пАтрибуты=Элемент0.Атрибуты;
        	Для Каждого пАтрибут ИЗ пАтрибуты Цикл
				пИмяАтрибута=ВРЕГ(пАтрибут.Имя);
				пЗначениеАтрибута=пАтрибут.Значение;
				пСтруктура.Вставить(пИмяАтрибута,пЗначениеАтрибута);
        	КонецЦикла;
        	Для Каждого ЭлАтр ИЗ пСтруктура Цикл
        		пТип=Неопределено;
        		пНайдено=пСтруктураСправочника.Свойство(ЭлАтр.Ключ,пТип);
        		Если НЕ пНайдено Тогда
        			Продолжить;
        		Иначе
       				пСтруктураНовыхЗначенийСправочника.Вставить(
       					ЭлАтр.Ключ,
       					ЗначениеXmlВЗначение(ЭлАтр.Значение,пТип));
	    		КонецЕсли;	
        	КонецЦикла;
        	пЗнИД=Неопределено;
        	пНайдено1=пСтруктура.Свойство(ИмяПоляИД,пЗнИД);
        	Если Не пНайдено1 Тогда
        		Продолжить;
        	КонецЕсли;
        	пЗнДатаНач=Неопределено;
        	пНайдено1=пСтруктура.Свойство(ИмяПоляДатаНач,пЗнДатаНач);
        	Если Не пНайдено1 Тогда
        		Продолжить;
        	КонецЕсли;
			пКод=ОбщегоНазначенияПГБ2.StrZero(Число(пЗнИД),пДлинаИД)+"-"+
        		ОбщегоНазначенияПГБ2.DTOS(ОбщегоНазначенияПГБ2.STOD(пЗнДатаНач,Истина));
        	пНайденныйЭлемент=пСпрМенеджер.НайтиПоКоду(пКод);
   	    	пНужноЗаписать=Истина;
   	    	//@skip-warning
   	    	пНовый=НЕ ЗначениеЗаполнено(пНайденныйЭлемент);
			Если Не пНовый Тогда
				пНайденныйЭлемент=пНайденныйЭлемент.ПолучитьОбъект();
     			пНужноЗаписать=Ложь;
				Для Каждого пЗн ИЗ пСтруктураНовыхЗначенийСправочника Цикл
					Если НЕ (пЗн.Значение=пНайденныйЭлемент[пЗн.Ключ]) Тогда
						пНужноЗаписать=Истина;
						пНайденныйЭлемент[пЗн.Ключ]=пЗн.Значение;
						Прервать;
					КонецЕсли	
				КонецЦикла;	
			Иначе
				пНужноЗаписать=Истина;	
				пНайденныйЭлемент=Справочники[пИмяСправочника].СоздатьЭлемент();
				Для Каждого пЗн ИЗ пСтруктураНовыхЗначенийСправочника Цикл
					пНайденныйЭлемент[пЗн.Ключ]=пЗн.Значение;
					Если пЗн.Ключ="NAME" Тогда
						Попытка
							пНайденныйЭлемент.Наименование=пЗн.Значение;
						Исключение
						КонецПопытки;
					КонецЕсли;	
				КонецЦикла;	
			КонецЕсли;	        	
			Если пНужноЗаписать Тогда
				пНайденныйЭлемент.Записать();        		       			
			КонецЕсли;	
     	КонецЕсли;	
	КонецЦикла;
	Парсер.Закрыть();
КонецПроцедуры

Процедура ЗагрузитьF003Справочник(пИмяСправочника)
	пФайл=пПапкаНСИ+ПолучитьРазделительПутиСервера()+пИмяСправочника+".xml";
	пСпрМенеджер=Справочники[пИмяСправочника];
	Парсер = Новый ЧтениеXML;
    Парсер.ОткрытьФайл(пФайл);
    Построитель = Новый ПостроительDOM;
    Документ = Построитель.Прочитать(Парсер);
    шш=1;
 	Для Каждого Элемент0 Из Документ.ЭлементДокумента.ДочерниеУзлы Цикл
        Если Элемент0.ИмяУзла = "item" Тогда
        	Если шш>1 Тогда
//        		Продолжить;
        	КонецЕсли;
        	шш=шш+1;		
        	пАтрибуты=Элемент0.Атрибуты;
        	пНужноЗаписать=Ложь;
			Для Каждого пАтрибут ИЗ пАтрибуты Цикл
				пИмяАтрибута=ВРЕГ(пАтрибут.Имя);
				пЗначениеАтрибута=пАтрибут.Значение;
				Если ВРЕГ(пИмяАтрибута)="MCOD" Тогда
    		    	пНайденнаяСсылка=пСпрМенеджер.НайтиПоКоду(СОКРЛП(пЗначениеАтрибута));
		   	    	пНовый=НЕ ЗначениеЗаполнено(пНайденнаяСсылка);
		   	    	Если пНовый Тогда
						пЭлементСправочника=Справочники[пИмяСправочника].СоздатьЭлемент();
						пЭлементСправочника.Код=СОКРЛП(пЗначениеАтрибута);
						пНужноЗаписать=Истина;
		   	    	Иначе
						пЭлементСправочника=пНайденнаяСсылка.ПолучитьОбъект();		   	    					   	    		
		   	    	КонецЕсли;
				Иначе
					Попытка
						пРеквизит=Метаданные.Справочники[пИмяСправочника].Реквизиты[пИмяАтрибута];
					Исключение
						Продолжить;
					КонецПопытки;
					пТип=пРеквизит.Тип.Типы()[0];
					Если Не пНовый Тогда
						Если Не пНужноЗаписать Тогда
							пНужноЗаписать=Не РеквизитИАтрибутРавны(пЭлементСправочника,пИмяАтрибута,пЗначениеАтрибута,пТип);
						КонецЕсли;							
					КонецЕсли;	
					Если пТип=Тип("Дата") Тогда
						пЭлементСправочника[пИмяАтрибута]=
							ОбщегоНазначенияПГБ2.STOD(пЗначениеАтрибута,Истина);
					ИначеЕсли пТип=Тип("Число") Тогда
						пЭлементСправочника[пИмяАтрибута]=Число(пЗначениеАтрибута);
					ИначеЕсли пТип=Тип("Строка") Тогда
						пЭлементСправочника[пИмяАтрибута]=СтрЗаменить(пЗначениеАтрибута,"&quot;","""");
					Иначе
						пЭлементСправочника[пИмяАтрибута]=пЗначениеАтрибута;							
					КонецЕсли;
					Если пИмяАтрибута="NAM_MOK" Тогда
						пЭлементСправочника.Наименование=СтрЗаменить(пЗначениеАтрибута,"&quot;","""");
					КонецЕсли;						
				КонецЕсли;	
			КонецЦикла;
			// Подчиненные DOC и PODR
			Для Каждого Элемент1 Из Элемент0.ДочерниеУзлы Цикл
        		Если (Элемент1.ИмяУзла = "DOC") ИЛИ (Элемент1.ИмяУзла="PODR") Тогда
        			пИмяТабличнойЧасти="Документы";
        			пИмяОсновногоРеквизитаТабличнойЧасти="N_DOC";
        			ИмяРеквизитаXml="item1";
        			Если Элемент1.ИмяУзла="PODR" Тогда
    		   			пИмяТабличнойЧасти="Подразделения";
	        			пИмяОсновногоРеквизитаТабличнойЧасти="ID_PODR";
	    	   			ИмяРеквизитаXml="item2";
	        		КонецЕсли;	
					Для Каждого Элемент2 Из Элемент1.ДочерниеУзлы Цикл
						//ТабЗнач=пЭлементСправочника[пИмяТабличнойЧасти].Выгрузить();
						Если НРЕГ(Элемент2.ИмяУзла)<>ИмяРеквизитаXml Тогда
							Продолжить;
						КонецЕсли;	
			        	пАтрибуты=Элемент2.Атрибуты;
			        	Для Каждого пАтрибут ИЗ пАтрибуты Цикл
							пИмяАтрибута=ВРЕГ(пАтрибут.Имя);
							пЗначениеАтрибута=пАтрибут.Значение;
							Если пИмяАтрибута=пИмяОсновногоРеквизитаТабличнойЧасти Тогда
								пОтбор=Новый Структура;
								пОтбор.Вставить(пИмяОсновногоРеквизитаТабличнойЧасти,
									?(пИмяОсновногоРеквизитаТабличнойЧасти="ID_PODR",Число(пЗначениеАтрибута),пЗначениеАтрибута));
//								пМассивСтрок=ТабЗнач.НайтиСтроки(пОтбор);
								пМассивСтрок=пЭлементСправочника[пИмяТабличнойЧасти].НайтиСтроки(пОтбор);
								пНовыйДок=?(пМассивСтрок.Количество()=0,Истина,Ложь);
								Если пНовыйДок Тогда
									пНужноЗаписать=Истина;
									пСтрокаТабличнойЧасти=пЭлементСправочника[пИмяТабличнойЧасти].Добавить();
									пСтрокаТабличнойЧасти[пИмяОсновногоРеквизитаТабличнойЧасти]=пЗначениеАтрибута;
								Иначе
									пСтрокаТабличнойЧасти=пМассивСтрок[0]; 
								КонецЕсли;	
							Иначе
								пИзмененТЧ=0;
								Если Найти("D_START,DATE_E,NAME_PODR,ADDR_P,TYPE_BRANCH,",пИмяАтрибута+",")>0 Тогда
									Если Найти("D_START,DATE_E,",пИмяАтрибута+",")>0 Тогда
										Если Не пИзмененТЧ Тогда
											пИзмененТЧ=Не РеквизитИАтрибутРавны(пСтрокаТабличнойЧасти,пИмяАтрибута,пЗначениеАтрибута,Тип("Дата"));
											пСтрокаТабличнойЧасти[пИмяАтрибута]=ОбщегоНазначенияПГБ2.STOD(пЗначениеАтрибута,Истина);
										КонецЕсли;
									ИначеЕсли  Найти("TYPE_BRANCH,",пИмяАтрибута+",")>0 Тогда
										Если Не пИзмененТЧ Тогда
											пИзмененТЧ=Не РеквизитИАтрибутРавны(пСтрокаТабличнойЧасти,пИмяАтрибута,пЗначениеАтрибута,Тип("Число"));
										КонецЕсли;											
										пСтрокаТабличнойЧасти[пИмяАтрибута]=Число(пЗначениеАтрибута);
									Иначе
										Если Не пИзмененТЧ Тогда
											пИзмененТЧ=Не РеквизитИАтрибутРавны(пСтрокаТабличнойЧасти,пИмяАтрибута,СтрЗаменить(пЗначениеАтрибута,"&quot;",""""),Тип("Строка"));
											пСтрокаТабличнойЧасти[пИмяАтрибута]=СтрЗаменить(пЗначениеАтрибута,"&quot;","""");
										КонецЕсли;											
									КонецЕсли;	
								КонецЕсли;	
							КонецЕсли;
			        	КонецЦикла;	
					КонецЦикла;	        			
        		КонецЕсли;
			КонецЦикла;			
			Если (пНужноЗаписать ИЛИ пИзмененТЧ) Тогда
				пЭлементСправочника.Записать();
			КонецЕсли;		        	
        КонецЕсли;	
	КонецЦикла;		
	Парсер.Закрыть();
КонецПроцедуры

Процедура ВыполнитьЗагрузкуНСИ(ИдентификаторКоманды)
	пПапкаНСИ=ОбщегоНазначенияПУМПСервер.ПолучитьПапкуДанных()+ПолучитьРазделительПутиСервера()+"STORAGE";
//	ЗагрузитьПростойСправочник("V006");
//	ЗагрузитьПростойСправочник("V008");
//	ЗагрузитьПростойСправочник("F003_T");
//	ЗагрузитьF003Справочник("F003");
//	ЗагрузитьПростойСправочник("V001_T");
//	ЗагрузитьПростойСправочник("V001_P");
//	ЗагрузитьПростойСправочник("V002");
//	ЗагрузитьПростойСправочник("V004");
	ЗагрузитьПростойСправочник("V004_D");

		
КонецПроцедуры

Процедура ВыполнитьКоманду(ИдентификаторКоманды) Экспорт
	ВыполнитьЗагрузкуНСИ(ИдентификаторКоманды);
КонецПроцедуры	