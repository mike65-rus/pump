Перем пПапкаНСИ;
Функция СведенияОВнешнейОбработке() Экспорт
       ДанныеДляРег = Новый Структура();
       ДанныеДляРег.Вставить("Наименование","Внешняя обработка загрузки НСИ");
       ДанныеДляРег.Вставить("Информация","Внешняя обработка Загрузка НСИ");
       ДанныеДляРег.Вставить("БезопасныйРежим", Ложь);
       ДанныеДляРег.Вставить("Версия", "ver.: 1.0.0.1");
       ДанныеДляРег.Вставить("Вид", "ДополнительнаяОбработка");
       ТабЗнКоманды = Новый ТаблицаЗначений;
       ТабЗнКоманды.Колонки.Добавить("Идентификатор");
       ТабЗнКоманды.Колонки.Добавить("Использование");
       ТабЗнКоманды.Колонки.Добавить("Представление");
       НовСтрока = ТабЗнКоманды.Добавить();
       НовСтрока.Идентификатор = "ВнешняяОбработкаЗагрузка_СКФОМС_НСИ";
       НовСтрока.Использование = "ВызовСерверногоМетода";
       НовСтрока.Представление = "Внешняя обработка Загрузка СКФОМС-НСИ";
       ДанныеДляРег.Вставить("Команды", ТабЗнКоманды);
       Возврат ДанныеДляРег;
КонецФункции

Процедура ЗагрузитьV006()
	Перем ID,NAME,DATE_BEG,DATE_END;
	пФайл=пПапкаНСИ+ПолучитьРазделительПутиСервера()+"V006.xml";
	пСпрМенеджер=Справочники.V006;
	Парсер = Новый ЧтениеXML;
    Парсер.ОткрытьФайл(пФайл);
    Построитель = Новый ПостроительDOM;
    Документ = Построитель.Прочитать(Парсер);
 	Для Каждого Элемент0 Из Документ.ЭлементДокумента.ДочерниеУзлы Цикл
        Если Элемент0.ИмяУзла = "item" Тогда
        	пАтрибуты=Элемент0.Атрибуты;
        	ID=пАтрибуты.ПолучитьИменованныйЭлемент("ID");
        	NAME=пАтрибуты.ПолучитьИменованныйЭлемент("NAME");
        	DATE_BEG=пАтрибуты.ПолучитьИменованныйЭлемент("DATE_BEG");
        	DATE_END=пАтрибуты.ПолучитьИменованныйЭлемент("DATE_END");
        	Если (ID=Неопределено) ИЛИ (DATE_BEG=Неопределено) Тогда
        		Продолжить;
        	КонецЕсли;	
        	пКод=ОбщегоНазначенияПГБ2.StrZero(Число(ID.Значение),2)+"-"+
        		ОбщегоНазначенияПГБ2.DTOS(ОбщегоНазначенияПГБ2.STOD(DATE_BEG.Значение,Истина));
        	пНайденныйЭлемент=пСпрМенеджер.НайтиПоКоду(пКод);
   	    	//@skip-warning
   	    	пНужноЗаписать=Истина;
   	    	//@skip-warning
   	    	пНовый=Истина;
   	    	пНовый=НЕ ЗначениеЗаполнено(пНайденныйЭлемент);
        	Если (НЕ пНовый) Тогда
        		// не новый
     			пНужноЗаписать=Ложь;
     			пНайденныйЭлемент=пНайденныйЭлемент.ПолучитьОбъект();   				        		
				Если НЕ (пНайденныйЭлемент.NAME=NAME.Значение) Тогда
					пНайденныйЭлемент.NAME=NAME.Значение;
					пНужноЗаписать=Истина;
				КонецЕсли;		   			
				Если (НЕ DATE_END=Неопределено) Тогда
					Если НЕ (пНайденныйЭлемент.DATE_END=DATE_END.Значение) Тогда
						пНайденныйЭлемент.DATE_END=DATE_END.Значение;
						пНужноЗаписать=Истина;
					КонецЕсли;
				КонецЕсли;		   			
				Если пНужноЗаписать Тогда
					пНайденныйЭлемент.Записать();        		       			
				КонецЕсли;	
        	Иначе
        		// новый
        		пНайденныйЭлемент=Справочники.V006.СоздатьЭлемент();
        		пНайденныйЭлемент.ID=Число(ID.Значение);
        		пНайденныйЭлемент.NAME=NAME.Значение;
        		пНайденныйЭлемент.Наименование=NAME.Значение;
        		пНайденныйЭлемент.DATE_BEG=ОбщегоНазначенияПГБ2.STOD(DATE_BEG.Значение,Истина);
        		Если НЕ (DATE_END=Неопределено) Тогда
        			пНайденныйЭлемент.DATE_END=ОбщегоНазначенияПГБ2.STOD(DATE_END.Значение,Истина);
        		КонецЕсли; 
				пНайденныйЭлемент.Записать();        		       			
        	КонецЕсли;	
     	КонецЕсли;	
	КонецЦикла;
	Парсер.Закрыть();
КонецПроцедуры

Процедура ВыполнитьЗагрузкуНСИ(ИдентификаторКоманды)
	пПапкаНСИ=ОбщегоНазначенияПУМПСервер.ПолучитьПапкуДанных()+ПолучитьРазделительПутиСервера()+"STORAGE";
	ЗагрузитьV006();	
КонецПроцедуры

Процедура ВыполнитьКоманду(ИдентификаторКоманды) Экспорт
	ВыполнитьЗагрузкуНСИ(ИдентификаторКоманды);
КонецПроцедуры	